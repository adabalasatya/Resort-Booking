(()=>{var e={};e.id=100,e.ids=[100],e.modules={6037:e=>{"use strict";e.exports=require("mongoose")},846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},1988:(e,s,r)=>{"use strict";r.r(s),r.d(s,{patchFetch:()=>k,routeModule:()=>y,serverHooks:()=>S,workAsyncStorage:()=>x,workUnitAsyncStorage:()=>f});var t={};r.r(t),r.d(t,{DELETE:()=>m,GET:()=>g});var o=r(2706),n=r(8203),i=r(5994),u=r(2339),a=r(6794);let{default:c}=r(6037),d=new c.Schema({startDate:{type:String,required:!0},endDate:{type:String,required:!0},productName:{type:String,required:!0},price:{type:String,required:!0},offer:{type:String},image:{type:String,required:!0},user:{type:c.Schema.Types.ObjectId,ref:"User"}}),p=c.models.booking||c.model("booking",d);var l=r(9187);async function g(e,{params:s}){await (0,u.A)();let{id:r}=s;console.log("dynamic Id:",r);try{if(!r)return l.NextResponse.json({success:!1,message:"no user found"},{status:404});let e=await a.A.findById(r).populate("bookings");return l.NextResponse.json({success:!0,data:e})}catch(e){return console.log(e),l.NextResponse.json({success:!1,message:"ID Is missing"})}}async function m(e,{params:s}){await (0,u.A)();let{id:r}=s;try{if(!r)return l.NextResponse.json({success:!1,message:"ID is missing"});if(!await p.findByIdAndDelete(r))return l.NextResponse.json({success:!1,message:"Booking not found"},{status:404});return l.NextResponse.json({success:!0,message:"Booking deleted successfully"})}catch(e){return console.error("Error deleting booking:",e),l.NextResponse.json({success:!1,message:"Server error",error:e.message},{status:500})}}let y=new o.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/users/[id]/route",pathname:"/api/users/[id]",filename:"route",bundlePath:"app/api/users/[id]/route"},resolvedPagePath:"C:\\Users\\pardh\\OneDrive\\Desktop\\Next_Resort\\src\\app\\api\\users\\[id]\\route.js",nextConfigOutput:"",userland:t}),{workAsyncStorage:x,workUnitAsyncStorage:f,serverHooks:S}=y;function k(){return(0,i.patchFetch)({workAsyncStorage:x,workUnitAsyncStorage:f})}},6487:()=>{},8335:()=>{},2706:(e,s,r)=>{"use strict";e.exports=r(4870)},2339:(e,s,r)=>{"use strict";r.d(s,{A:()=>o});let{default:t}=r(6037),o=async()=>{try{await t.connect(process.env.MONOGO_URI),console.log("Database connected")}catch(e){console.log(e)}}},6794:(e,s,r)=>{"use strict";r.d(s,{A:()=>i});let{default:t,mongo:o}=r(6037),n=new t.Schema({username:{type:String,required:!0},email:{type:String,required:!0,unique:!0},password:{type:String,required:!0},role:{type:String,default:"user"},bookings:[{type:t.Schema.Types.ObjectId,ref:"booking"}]}),i=t.models.user||t.model("user",n)}};var s=require("../../../../webpack-runtime.js");s.C(e);var r=e=>s(s.s=e),t=s.X(0,[989,187],()=>r(1988));module.exports=t})();